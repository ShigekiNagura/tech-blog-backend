[tool.poetry]
name = "tech-blog-backend"
version = "0.1.0"
description = ""
authors = ["nagura <nagura@kdl.co.jp>"]

[tool.poetry.dependencies]
python = "^3.9"
Django = "^4.0.2"
mysqlclient = "^2.1.0"
djangorestframework = "^3.13.1"
behave-django = "^1.4.0"
PyHamcrest = "^2.0.3"
pydantic = "^1.9.1"
loguru = "^0.6.0"
django-cors-headers = "^3.13.0"

[tool.poetry.dev-dependencies]
black = "^22.1.0"
flake8 = "^5.0.4"
flake8-bugbear = "^22.1.11"
pyproject-flake8 = "^0.0.1-alpha.2"
mypy = "^0.931"
isort = "^5.10.1"
autoflake = "^1.4"
pre-commit = "^2.17.0"
taskipy = "^1.10.1"
pytest = "^5.2"
behave = "^1.2.6"
PyHamcrest = "^2.0.3"

[tool.taskipy.tasks]
fmt = { cmd = "autoflake --remove-all-unused-imports --recursive --remove-unused-variables --in-place src --exclude=__init__.py && black src && isort src", help = "format code" }
lint = { cmd = "task lint_black && task lint_flake8 && task lint_mypy", help = "exec lint" }
lint_flake8 = "flake8 --max-line-length=100 src"
lint_mypy = "mypy src"
lint_black = "black --check src"
fix = { cmd = "task fmt && task lint", help = "exec fix" }
test = { cmd = "python src/manage.py behave --use-existing-database" }

[tool.flake8]
max-line-length = 119
max-complexity = 10
select = "C,E,F,W,B"
ignore = "E203"

[tool.black]
exclude = '''
(
    migrations
    | .mypy_cache
    | .pytest_cache
    | .tox
    | .venv
    | dist
)
'''

[tool.mypy]
# common
python_version = 3.9
show_column_numbers  = true
show_error_context = true
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = true
# warning
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true

[tool.isort]
profile = "black"
line_length = 119

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"